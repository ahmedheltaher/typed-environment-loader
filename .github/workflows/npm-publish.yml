name: Publish Package to npm

on:
    push:
        tags:
            - 'v*'

permissions:
    contents: write

jobs:
    build-and-publish:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '18.x'
                  registry-url: 'https://registry.npmjs.org'

            - name: Install dependencies
              run: npm ci

            - name: Build package
              run: npm run build

            - name: Test package
              run: npm test

            - name: Extract version from tag
              id: get_version
              run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

            - name: Generate Release Notes
              id: release_notes
              run: |
                  # Get commits since last tag
                  PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
                  if [ -z "$PREVIOUS_TAG" ]; then
                    COMMITS=$(git log --pretty=format:"- %s" $GITHUB_SHA)
                  else
                   COMMITS=$(git log --pretty=format:"- %s" $PREVIOUS_TAG..$GITHUB_SHA)
                  fi
                  echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
                  echo "## Changes in this release" >> $GITHUB_ENV
                  echo "$COMMITS" >> $GITHUB_ENV
                  echo "EOF" >> $GITHUB_ENV

            - name: Create GitHub Release
              uses: softprops/action-gh-release@v1
              with:
                  name: Release ${{ env.VERSION }}
                  body: ${{ env.RELEASE_NOTES }}
                  draft: false
                  prerelease: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Publish to npm
              run: npm publish
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
